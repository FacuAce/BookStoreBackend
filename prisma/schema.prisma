// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Book {
  id          Int       @id @default(autoincrement())
  name        String
  descripcion String
  status      String    @default("ACTIVE")
  author      User      @relation(fields: [userId], references: [id])
  userId      Int
  its         DateTime  @default(now())
  dts         DateTime?
}

model User {
  id        Int        @id @default(autoincrement())
  dni       String
  email     String
  firstname String
  lastname  String
  password  String
  status    String     @default("ACTIVE")
  its       DateTime   @default(now())
  uts       DateTime?
  dts       DateTime?
  RoleUser  RoleUser[]
  Book      Book[]
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String
  description    String?
  status         String           @default("ACTIVE")
  its            DateTime         @default(now())
  uts            DateTime?
  dts            DateTime?
  RoleUser       RoleUser[]
  PermissionRole PermissionRole[]
}

model RoleUser {
  user   User      @relation(fields: [userId], references: [id])
  role   Role      @relation(fields: [roleId], references: [id])
  userId Int
  roleId Int
  its    DateTime  @default(now())
  dts    DateTime?

  @@id([userId, roleId])
}

model Permission {
  code           String           @id
  shortname      String
  description    String?
  PermissionRole PermissionRole[]
}

model PermissionRole {
  permissionCode String
  roleId         Int
  its            DateTime   @default(now())
  permission     Permission @relation(fields: [permissionCode], references: [code])
  role           Role       @relation(fields: [roleId], references: [id])

  @@id([permissionCode, roleId])
}
